// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of ThingTalk
//
// Copyright 2017-2018 The Board of Trustees of the Leland Stanford Junior University
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
//
// See COPYING for details

{
const assert = require('assert');

const ThingTalk = require('thingtalk');
const Ast = ThingTalk.Ast;
const Type = ThingTalk.Type;

// import the combinator library
const C = require('../ast_manip');

function special(specialType) {
    return new Ast.Input.Bookkeeping(new Ast.BookkeepingIntent.Special(specialType));
}

}

command_category = {
    ('notizie' | 'giornali' | 'media' | 'fumetti' | 'fumetti web' | 'web comics' | 'meme' | 'barzellette') => 'media';
    ('social network' | 'social' | 'social media') => 'social-network';
    ('comunicazione' | 'messaggistica') => 'communication';
    ('casa' | 'automazione' | 'automazione per la casa' | 'domotica' | 'home entertainment' | 'internet of things' | 'iot') => 'home';
    ('dati' | 'cloud' | 'gestioni dati' | 'file storage' | 'gestione file') => 'data-management';
    ('salute' | 'fitness' | 'salute e fitness' | 'controllo salute') => 'media';
    ('servizi' | 'altro' | 'miscellanea') => 'service';
}

$root = {
    ('sì'
    | 'assolutamente'
    | 'assolutamente sì',
    | 'certo'
    | 'sicuro'
    | 'sicuramente'
    | 'chiaro'
    | 'affermativo'
    | 'ok'
    | 'okay'
    | 'va bene'
    | 'per me va bene'
    ) => special('yes');

     ('no'
    | 'non esiste !'
    | 'proprio no'
    | 'assolutamente no'
    | 'niente affatto'
    | 'negativo'
    | 'per favore no'
    | 'non va bene'
    | 'non è corretto'
    | 'non è giusto'
    | 'stai sbagliando'
    | 'hai sbagliato'
    | 'è sbagliato'
    | 'sbagliato'
    | 'non farlo'
    | 'no non farlo'
    | 'no non voglio quella cosa lì'
    | 'no non va bene'
    ) => special('no');

     ('indietro'
    | 'torna indietro'
    | 'pagina precedente'
    | 'mostrami la pagina precedente'
    | 'vai alla pagina precedente'
    ) => special('back');

     ('ancora'
    | 'di più'
    | 'mostrami di più'
    | 'mostrami più risultati'
    | 'pagina successiva'
    | 'mostrami la pagina successiva'
    | 'vai alla pagina successiva'
    | 'vai alla prossima pagina dei risultati'
    ) => special('more');

    'debug' => special('debug');

     ('annulla'
    | 'non importa'
    | 'reset'
    | 'resettati'
    | 'inizia da capo'
    | 'inizia d\' accapo'
    | 'ricomincia'
    | 'torna all\' inizio'
    | 'annulla tutto'
    ) => special('nevermind');

     ('fermati'
    |  'stop'
    |  'zitto'
    |  'zitta'
    |  'silenzio'
    |  'fai silenzio'
    |  'smettila'
    |  'chiudi'
    |  'chiuditi'
    ) => special('stop');

     ('aiuto'
    | 'aiutami'
    | 'cosa puoi fare ?'
    | 'cosa sei in grado di fare ?'
    | 'cosa sei capace di fare ?'
    | 'lista comandi'
    | 'elenca i comandi'
    | 'mostrami i comandi'
    | 'mostrami cosa sai fare'
    | 'quali comandi posso dire ?'
    | 'quali comandi posso usare ?'
    | 'che comandi posso usare ?'
    | 'cosa posso dire ?'
    | 'cosa posso scrivere ?'
    | 'cosa capisci ?'
    | 'che comandi capisci ?'
    | 'mostrami la lista di tutti i comandi'
    | 'quali skill hai ?'
    | 'quali abilità hai ?'
    | 'che dispositivi hai ?'
    | 'che dispositivi supporti ?'
    | 'quali skills posso usare ?'
    | 'che skills posso usare ?'
    | 'che abilità posso usare ?'
    | 'quali dispositivi sono disponibili ?'
    | 'quali servizi sono disponibili ?'
    | "cos' è disponibile ?"
    ) => special('help');

     ('crea un comando'
    | 'crea una regola'
    | 'crea un nuovo comando'
    | 'crea un comando nuovo'
    | 'aiutami a creare un comando'
    | 'crea un comando composito'
    | 'aiutami a fare un comando'
    | 'fa un comando per me'
    | 'fa\' un comando per me'
    ) => special('makerule');

     ('sveglia'
    | 'svegliati'
    | 'ehi almond'
    ) => special('wakeup');

    !no_contextual_bookkeeping {
         ('recupera comandi' c:command_category
        | 'recupera i comandi in' c:command_category
        | 'elenca i dispositivi' c:command_category
        ) => new Ast.Input.Bookkeeping(new Ast.BookkeepingIntent.CommandList(new Ast.Value.Undefined(true), c));

         ( c:constant_Any
        | 'la risposta è' c:constant_Any
        | 'usa' c:constant_Any
        | 'voglio' c:constant_Any
        ) => new Ast.Input.Bookkeeping(new Ast.BookkeepingIntent.Answer(c));
    }

    // NOTE: the following bookkeeping commands have no template:
    // - failed: it's a placeholder for OOD/invalid command
    // - train: must be activated from the UI (any natural language would override the training)
    // - empty: not a real command, just the absence of one (used for makerule)
    // - maybe: also not a real command; used from permission grant
    // - choice: no general language exists, MultipleChoice is handled by the server instead
    // - commandlist with specified device: it will go into @builtin.get_commands instead
    // - predicate: needs to be handled as a contextual template
}
