"drop table if exists app ;\n\ncreate table app (\n       uniqueId varchar(255) primary key,\n       code text not null,\n       state text not null,\n       name text null default null,\n       description text null default null\n);\n\ndrop table if exists device ;\ndrop table if exists device_journal ;\n\ncreate table device (\n       uniqueId varchar(255) primary key,\n       state text not null\n);\n\ncreate table device_journal (\n       uniqueId varchar(255) primary key,\n       lastModified datetime\n);\n\ndrop index if exists device_lastModified;\n\ncreate index device_lastModified on device_journal(lastModified) ;\n\ndrop table if exists keyword ;\n\ncreate table keyword (\n       uniqueId varchar(255) primary key,\n       value text default null\n);\n\ndrop table if exists channel ;\n\ncreate table channel (\n       uniqueId varchar(255) primary key,\n       value text default null\n);\n\ndrop table if exists permissions;\n\ncreate table permissions (\n        uniqueId varchar(255) primary key,\n        compat_key text not null,\n        code text not null,\n        extra text default null\n);\n\ncreate index permissions_compat_key on permissions(compat_key);\n\ncreate table matrix_sync (\n    owner_id text,\n    object_key text,\n    object_value text,\n    primary key(owner_id, object_key)\n);\ncreate table matrix_accountData (\n    owner_id text,\n    object_key text,\n    object_value text,\n    primary key(owner_id, object_key)\n);\ncreate table matrix_users (\n    owner_id text,\n    object_key text,\n    object_value text,\n    primary key(owner_id, object_key)\n);\n\ncreate table matrix_outgoingRoomKeyRequests (\n    owner_id text,\n    request_id text,\n    room_id text,\n    session_id text,\n    state int,\n    object text,\n    primary key(owner_id, request_id)\n);\ncreate index matrix_outgoingRoomKeyRequests_session on matrix_outgoingRoomKeyRequests(owner_id, room_id, session_id);\ncreate index matrix_outgoingRoomKeyRequests_state on matrix_outgoingRoomKeyRequests(owner_id, state);\n\ncreate table if not exists memory_table_meta (\n    name text primary key,\n    args text,\n    types text\n);\n"
