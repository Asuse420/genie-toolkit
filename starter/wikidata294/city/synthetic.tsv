S4000000000	list cities	now => @org.wikidata.city => notify
S4000000001	retrieve all cities	now => @org.wikidata.city => notify
S4000000002	retrieve all cities	now => @org.wikidata.city => notify
S4000000003	list cities	now => @org.wikidata.city => notify
S4000000004	retrieve all cities	now => @org.wikidata.city => notify
S4000000005	search the list of all cities .	now => @org.wikidata.city => notify
S4000000006	retrieve all cities .	now => @org.wikidata.city => notify
S4000000007	i want to search the list of cities	now => @org.wikidata.city => notify
S4000000008	retrieve all cities .	now => @org.wikidata.city => notify
S4000000009	list cities	now => @org.wikidata.city => notify
S4000000010	search the list of all cities	now => @org.wikidata.city => notify
S4000000011	i need to get the cities .	now => @org.wikidata.city => notify
S4000000012	i need to get the cities	now => @org.wikidata.city => notify
S4000000013	list cities	now => @org.wikidata.city => notify
S4000000014	search the list of all cities .	now => @org.wikidata.city => notify
S4000000015	retrieve all cities .	now => @org.wikidata.city => notify
S5000000016	i need to search for the cities having over NUMBER_0 total fertility rate	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000017	search for the cities with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000018	retrieve the cities banglapedia ( bengali version) id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 => notify
S5000000019	search for the cities with the largest number of participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000020	i am looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000021	retrieve the cities banglapedia ( bengali version) id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 => notify
S5000000022	search all cities having dewey decimal classification QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dewey_decimal_classification:String =~ QUOTED_STRING_0 => notify
S5000000023	search for the cities with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000024	search all cities having over NUMBER_0 total fertility rate .	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000025	i 'm looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000026	i am looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000027	i would like a citie having over NUMBER_0 total fertility rate	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000028	i am looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000029	get any cities that have later time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 => notify
S5000000030	i am looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000031	which are cities having later time of earliest written record than DATE_0 and area NUMBER_0 square meters ?	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 and param:time_of_earliest_written_record:Date >= DATE_0 => notify
S5000000032	search all cities having dewey decimal classification QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dewey_decimal_classification:String =~ QUOTED_STRING_0 => notify
S5000000033	search all cities having over NUMBER_0 total fertility rate	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000034	i 'm looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000035	i am looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000036	what is cities having over NUMBER_0 total fertility rate ?	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000037	search all cities having over NUMBER_0 total fertility rate .	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000038	search all cities having dewey decimal classification QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dewey_decimal_classification:String =~ QUOTED_STRING_0 => notify
S5000000039	search for the cities with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000040	are there cities having over NUMBER_0 total fertility rate that connects with QUOTED_STRING_0 ?	now => ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000041	search all cities having over NUMBER_0 total fertility rate .	now => ( @org.wikidata.city ) filter param:total_fertility_rate:Number >= NUMBER_0 => notify
S5000000042	i 'm looking for the cities banglapedia ( bengali version) id QUOTED_STRING_0 which has the hottest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000043	get any cities that have later time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 => notify
S5000000044	search for the cities with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000045	retrieve the cities located on terrain feature LOCATION_0 with the hottest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:located_on_terrain_feature:Location == LOCATION_0 ) ) [ 1 ] => notify
S5000000046	search for the cities with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000047	search for the cities with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S6000000048	get any cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000049	are there any cities with electoral district QUOTED_STRING_0 and later time of earliest written record than NUMBER_0 h before now ?	now => ( @org.wikidata.city ) filter param:electoral_district:String =~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date >= now - NUMBER_0 unit:h => notify
S6000000050	what cities are film instance , and have over NUMBER_0 total fertility rate	now => ( @org.wikidata.city ) filter param:instance_of:Enum(Human,Village,Book,House,Film,Taxon,Building,FamilyName,Album,HumanSettlement,Painting,Version,Edition,OrTranslation,Business) == enum:Film and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000051	retrieve a list of all cities with area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000052	search for the cities having larger area than NUMBER_0 square kilometers and the minimum minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) asc of ( ( @org.wikidata.city ) filter param:area:Measure(m2) >= NUMBER_0 unit:km2 ) ) [ 1 ] => notify
S6000000053	i would like a list of all cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000054	find the list of cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000055	get all cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000056	tell me what 's the currency of the cities which has the hottest minimum temperature record	now => [ param:currency:Entity(org.wikidata:currency) ] of ( ( sort param:minimum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000057	i need all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000058	search for the cities which have NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms => notify
S6000000059	get the list of all cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000060	i am looking for the list of all cities having larger area than NUMBER_0 square kilometers .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= NUMBER_0 unit:km2 => notify
S6000000061	i would like to find some cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000062	get the list of all cities which have area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000063	get the list of all cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000064	i need to retrieve all cities helvetic archives id QUOTED_STRING_0 , having over NUMBER_0 total fertility rate	now => ( @org.wikidata.city ) filter param:helveticarchives_id:String =~ QUOTED_STRING_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000065	find the list of cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000066	how many participant in are there in the cities with the highest number of participant in ?	now => [ param:count:Number ] of ( ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.city ) ) ) [ 1 ] ) => notify
S6000000067	please get all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000068	tell me what 's the currency of the cities which has the hottest minimum temperature record	now => [ param:currency:Entity(org.wikidata:currency) ] of ( ( sort param:minimum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000069	i need all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000070	i need to search for an cities which have area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000071	search for a list of cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000072	search for the cities which have NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms => notify
S6000000073	please enumerate cities which have area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000074	i need to retrieve all cities helvetic archives id QUOTED_STRING_0 , having over NUMBER_0 total fertility rate .	now => ( @org.wikidata.city ) filter param:helveticarchives_id:String =~ QUOTED_STRING_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000075	retrieve a list of all cities with area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000076	i need all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000077	which foods traditionally associated do cities have ?	now => [ param:foods_traditionally_associated:Entity(org.wikidata:foods_traditionally_associated) ] of ( @org.wikidata.city ) => notify
S6000000078	i need to search for an cities which have area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000079	what are the shares border with of cities	now => [ param:shares_border_with:Array(Entity(org.wikidata:city)) ] of ( @org.wikidata.city ) => notify
S6000000080	i need to search for an cities which have area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000081	which official app does cities which has the hottest minimum temperature record have	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( ( sort param:minimum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000082	retrieve a list of all cities with area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000083	get the list of all cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000084	is there cities with maximum temperature record NUMBER_0 fahrenheit and life expectancy shorter than NUMBER_0 h	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) <= NUMBER_0 unit:h and param:maximum_temperature_record:Measure(C) == NUMBER_0 unit:F => notify
S6000000085	get some cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000086	i am looking to find all cities banglapedia ( bengali version) id QUOTED_STRING_0 helvetic archives id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 and param:helveticarchives_id:String =~ QUOTED_STRING_0 => notify
S6000000087	get the list of all cities which have area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000088	get the list of all cities which have area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000089	i need to search for an cities which have area NUMBER_0 square meters .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000090	find the list of cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000091	which cities that connects with QUOTED_STRING_0 gets the hottest minimum temperature record ?	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000092	i need the cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000093	i need all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000094	what is the foods traditionally associated of the cities which has the hottest minimum temperature record	now => [ param:foods_traditionally_associated:Entity(org.wikidata:foods_traditionally_associated) ] of ( ( sort param:minimum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000095	get some cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000096	i would like the cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000097	search for a list of cities linked in company id QUOTED_STRING_0 , that have life expectancy longer than NUMBER_0 h .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:h and param:linkedin_company_id:String =~ QUOTED_STRING_0 => notify
S6000000098	i am looking to find all cities banglapedia ( bengali version) id QUOTED_STRING_0 helvetic archives id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:banglapedia_bengali_version_id:String =~ QUOTED_STRING_0 and param:helveticarchives_id:String =~ QUOTED_STRING_0 => notify
S6000000099	please get all the cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000100	get all cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000101	please enumerate cities which have area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000102	get some cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000103	get some cities located on terrain feature LOCATION_0 with NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:located_on_terrain_feature:Location == LOCATION_0 => notify
S6000000104	which are cities which have NUMBER_0 ms or more life expectancy and have maximum temperature record NUMBER_0 fahrenheit	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms and param:maximum_temperature_record:Measure(C) == NUMBER_0 unit:F => notify
S6000000105	i am looking for the list of all cities having larger area than NUMBER_0 square kilometers .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= NUMBER_0 unit:km2 => notify
S6000000106	i need to search for an cities which have area NUMBER_0 square meters	now => ( @org.wikidata.city ) filter param:area:Measure(m2) == NUMBER_0 unit:m2 => notify
S6000000107	search for the cities which have NUMBER_0 ms or more life expectancy .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= NUMBER_0 unit:ms => notify
S6000000108	which foods traditionally associated do cities have ?	now => [ param:foods_traditionally_associated:Entity(org.wikidata:foods_traditionally_associated) ] of ( @org.wikidata.city ) => notify
S6000000109	get any cities having over NUMBER_0 total fertility rate and later time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= DATE_0 and param:total_fertility_rate:Number >= NUMBER_0 => notify
S6000000110	what are the shares border with of cities	now => [ param:shares_border_with:Array(Entity(org.wikidata:city)) ] of ( @org.wikidata.city ) => notify
S6000000111	which participant in does cities have ?	now => [ param:participant_in:Array(Entity(org.wikidata:event)) ] of ( @org.wikidata.city ) => notify
S4000000000	get any cities	now => @org.wikidata.city => notify
S4000000001	i need the cities with the highest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000002	search for some cities .	now => @org.wikidata.city => notify
S4000000003	i need to retrieve every cities	now => @org.wikidata.city => notify
S4000000004	is there cities ?	now => @org.wikidata.city => notify
S4000000005	i need the cities with the highest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000006	i need the cities with the highest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000007	search for some cities .	now => @org.wikidata.city => notify
S4000000008	search for some cities	now => @org.wikidata.city => notify
S4000000009	search for some cities .	now => @org.wikidata.city => notify
S4000000010	search for some cities	now => @org.wikidata.city => notify
S4000000011	search for some cities	now => @org.wikidata.city => notify
S4000000012	i need to retrieve every cities .	now => @org.wikidata.city => notify
S4000000013	enumerate cities	now => @org.wikidata.city => notify
S4000000014	which cities get density 0 ?	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S4000000015	i need the cities with the highest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S5000000016	i need the cities having flag QUOTED_STRING_0 and the highest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:flag:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000017	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000018	is there cities dedicated to QUOTED_STRING_0 open street map relation id QUOTED_STRING_0 ?	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000019	i am looking to get the list of all cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000020	get every cities with density 0	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S5000000021	what cities get density 0 and time of discovery or invention today	now => ( @org.wikidata.city ) filter param:density:Number == 0 and param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S5000000022	i 'd like all the cities that have number of households larger than 0 .	now => ( @org.wikidata.city ) filter param:number_of_households:Number >= 0 => notify
S5000000023	i need to search for the list of cities with density 0 .	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S5000000024	please list cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000025	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000026	please list cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000027	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000028	i would like all the cities that have number of households larger than 0 .	now => ( @org.wikidata.city ) filter param:number_of_households:Number >= 0 => notify
S5000000029	find an cities located in or next to body of water QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:located_in_or_next_to_body_of_water:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000030	find an cities located in or next to body of water QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:located_in_or_next_to_body_of_water:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000031	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000032	i need to search for the list of cities with density 0	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S5000000033	please list cities open street map relation id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000034	get every cities with density 0	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S5000000035	i am looking to get the list of all cities open street map relation id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000036	get the cities that applies to jurisdiction my office and have the earliest time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date asc of ( ( @org.wikidata.city ) filter param:applies_to_jurisdiction:Location == location:work ) ) [ 1 ] => notify
S5000000037	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000038	i need the cities having flag QUOTED_STRING_0 and the highest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:flag:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000039	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000040	i need to search for the list of cities with density 0	now => ( @org.wikidata.city ) filter param:density:Number == 0 => notify
S5000000041	is there cities having lower maximum temperature record than 0 c ?	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) <= 0 unit:C => notify
S5000000042	find an cities located in or next to body of water QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:located_in_or_next_to_body_of_water:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000043	are there cities with maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S5000000044	i would like all the cities that have number of households larger than 0	now => ( @org.wikidata.city ) filter param:number_of_households:Number >= 0 => notify
S5000000045	get the cities that applies to jurisdiction my office and have the earliest time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date asc of ( ( @org.wikidata.city ) filter param:applies_to_jurisdiction:Location == location:work ) ) [ 1 ] => notify
S5000000046	i 'm looking to get the list of all cities open street map relation id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 => notify
S5000000047	get a list of all cities located in or next to body of water QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:located_in_or_next_to_body_of_water:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000048	search all cities that have time of discovery or invention today	now => ( @org.wikidata.city ) filter param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S6000000049	please search for all the cities dedicated to QUOTED_STRING_0 with width 0 m .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:width:Measure(m) == 0 unit:m => notify
S6000000050	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000051	what cities get service retirement 0 minutes before today ?	now => ( @org.wikidata.city ) filter param:service_retirement:Date == start_of unit:day - 0 unit:min => notify
S6000000052	i want the list of all cities which have width 0 m	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000053	search all cities that have time of discovery or invention today .	now => ( @org.wikidata.city ) filter param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S6000000054	i need to get any cities which have maximum temperature record 0 c .	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000055	get the list of all cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000056	i want the list of all cities which have width 0 m	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000057	which architectural style does the cities which has the earliest time of earliest written record have ?	now => [ param:architectural_style:Entity(org.wikidata:architectural_style) ] of ( ( sort param:time_of_earliest_written_record:Date asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000058	retrieve the cities that applies to jurisdiction my office and have number of households larger than 0 and the highest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:applies_to_jurisdiction:Location == location:work and param:number_of_households:Number >= 0 ) ) [ 1 ] => notify
S6000000059	retrieve the cities dedicated to QUOTED_STRING_0 , that have minimum temperature record 0 c and the highest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == 0 unit:C ) ) [ 1 ] => notify
S6000000060	search the cities dedicated to QUOTED_STRING_0 , which have minimum temperature record 0 c and have the highest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == 0 unit:C ) ) [ 1 ] => notify
S6000000061	please search for all the cities dedicated to QUOTED_STRING_0 with width 0 m	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:width:Measure(m) == 0 unit:m => notify
S6000000062	search all cities that have time of discovery or invention today	now => ( @org.wikidata.city ) filter param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S6000000063	i need the cities open street map relation id QUOTED_STRING_0 with the highest number of occupations .	now => ( sort param:count:Number desc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000064	i need the cities open street map relation id QUOTED_STRING_0 with the highest number of occupations .	now => ( sort param:count:Number desc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( ( @org.wikidata.city ) filter param:openstreetmap_relation_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000065	get a list of cities which have time of earliest written record sooner than today	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= start_of unit:day => notify
S6000000066	i want all the cities which have maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000067	please search for all the cities dedicated to QUOTED_STRING_0 with width 0 m .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:width:Measure(m) == 0 unit:m => notify
S6000000068	get the list of all cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000069	is there any cities that have later time of earliest written record than 0 minutes before today	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= start_of unit:day - 0 unit:min => notify
S6000000070	is there cities with life expectancy longer than 0 minutes and minimum temperature record 0 c	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 0 unit:min and param:minimum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000071	i want all the cities which have maximum temperature record 0 c .	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000072	search the cities dedicated to QUOTED_STRING_0 , that have minimum temperature record 0 c and the highest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == 0 unit:C ) ) [ 1 ] => notify
S6000000073	search all cities that have time of discovery or invention today .	now => ( @org.wikidata.city ) filter param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S6000000074	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000075	please search for all the cities dedicated to QUOTED_STRING_0 with width 0 m	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:width:Measure(m) == 0 unit:m => notify
S6000000076	get all the cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000077	tell me what is the motto of cities .	now => [ param:motto:Entity(org.wikidata:motto) ] of ( @org.wikidata.city ) => notify
S6000000078	i would like any cities that have time of discovery or invention today	now => ( @org.wikidata.city ) filter param:time_of_discovery_or_invention:Date == start_of unit:day => notify
S6000000079	search for the cities that have life expectancy longer than 0 minutes and have the earliest time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 0 unit:min ) ) [ 1 ] => notify
S6000000080	i want the list of all cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000081	which are the cities having flag QUOTED_STRING_0 which have time of earliest written record sooner than 0 minutes before today	now => ( @org.wikidata.city ) filter param:flag:String =~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= start_of unit:day - 0 unit:min => notify
S6000000082	which coat of arms does cities with the highest maximum temperature record have ?	now => [ param:coat_of_arms:Entity(org.wikidata:coat_of_arms) ] of ( ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000083	what are the position held of the cities which has the earliest time of earliest written record ?	now => [ param:position_held:Array(String) ] of ( ( sort param:time_of_earliest_written_record:Date asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000084	i want all the cities which have maximum temperature record 0 c .	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000085	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000086	i want all the cities which have maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000087	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000088	get all the cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000089	search for the cities that have life expectancy longer than 0 minutes and have the earliest time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 0 unit:min ) ) [ 1 ] => notify
S6000000090	find the cities with minimum temperature record 0 c .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000091	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000092	what 's the country of the cities with the highest maximum temperature record	now => [ param:country:Entity(org.wikidata:country) ] of ( ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000093	i want all the cities which have maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000094	tell me what 's the motto of cities .	now => [ param:motto:Entity(org.wikidata:motto) ] of ( @org.wikidata.city ) => notify
S6000000095	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000096	i need to get any cities which have maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000097	get all the cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000098	get all the cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000099	get a list of cities which have time of earliest written record sooner than today .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= start_of unit:day => notify
S6000000100	i want all the cities which have maximum temperature record 0 c	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000101	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000102	list cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000103	get a list of cities which have time of earliest written record sooner than today	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= start_of unit:day => notify
S6000000104	please search for any cities dedicated to QUOTED_STRING_0 , which have flag QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:flag:String =~ QUOTED_STRING_0 => notify
S6000000105	what 's the native language of the cities with the highest maximum temperature record	now => [ param:native_language:Entity(tt:iso_lang_code) ] of ( ( sort param:maximum_temperature_record:Measure(C) desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000106	i want all the cities which have maximum temperature record 0 c .	now => ( @org.wikidata.city ) filter param:maximum_temperature_record:Measure(C) == 0 unit:C => notify
S6000000107	get a list of cities which have time of earliest written record sooner than today .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= start_of unit:day => notify
S6000000108	tell me what is the motto of cities	now => [ param:motto:Entity(org.wikidata:motto) ] of ( @org.wikidata.city ) => notify
S6000000109	please search for all the cities dedicated to QUOTED_STRING_0 with width 0 m .	now => ( @org.wikidata.city ) filter param:dedicated_to:String =~ QUOTED_STRING_0 and param:width:Measure(m) == 0 unit:m => notify
S6000000110	i want the list of all cities which have width 0 m .	now => ( @org.wikidata.city ) filter param:width:Measure(m) == 0 unit:m => notify
S6000000111	i am looking for all cities with density 0 and lower maximum temperature record than 0 c .	now => ( @org.wikidata.city ) filter param:density:Number == 0 and param:maximum_temperature_record:Measure(C) <= 0 unit:C => notify
S4000000000	i 'd like the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000001	i 'm looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000002	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000003	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000004	i 'm looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000005	i would like to get a list of city	now => @org.wikidata.city => notify
S4000000006	i need to retrieve a list of all city	now => @org.wikidata.city => notify
S4000000007	enumerate city .	now => @org.wikidata.city => notify
S4000000008	i would like to get a list of city	now => @org.wikidata.city => notify
S4000000009	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000010	enumerate city .	now => @org.wikidata.city => notify
S4000000011	i 'm looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000012	i 'm looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000013	search for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000014	list city .	now => @org.wikidata.city => notify
S4000000015	i am looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S5000000016	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000017	i need the city which connects with QUOTED_STRING_0 and have the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000018	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000019	search for the city having official number of town quarter containing QUOTED_STRING_0 and the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000020	i 'd like to search the city having over 3 visitors per year	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000021	search for every city with licence plate code QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000022	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000023	i need to get all city with git hub username QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000024	i need to get all city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000025	which city connects with QUOTED_STRING_0 , and have area smaller than 3 square kilometers	now => ( @org.wikidata.city ) filter param:area:Measure(m2) <= 3 unit:km2 and param:connects_with:String =~ QUOTED_STRING_0 => notify
S5000000026	i 'd like to search the city having over 3 visitors per year .	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000027	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000028	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000029	i want some city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000030	i want some city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000031	search for the city with git hub username QUOTED_STRING_0 and the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000032	i need to get all city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000033	count the city .	now => aggregate count of ( @org.wikidata.city ) => notify
S5000000034	what 's city with licence plate code QUOTED_STRING_0 that have life expectancy 3 seconds ?	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 and param:life_expectancy:Measure(ms) == 3 unit:s => notify
S5000000035	i 'd like to search the city having over 3 visitors per year	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000036	get the city pactols thesaurus id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000037	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000038	are there city which have closer elevation above sea level than 3 km	now => ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:km => notify
S5000000039	find a list of all city that have official number of town quarter containing QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 => notify
S5000000040	i want to search the city which arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000041	search for every city with licence plate code QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000042	i want some city with git hub username QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000043	search for every city with licence plate code QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000044	i 'd like to search the city having over 3 visitors per year .	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000045	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000046	how many position held in the city with the shortest elevation above sea level	now => [ param:count:Number ] of ( compute count ( param:position_held:Array(String) ) of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) ) => notify
S5000000047	get the city pactols thesaurus id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S6000000048	get some city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000049	i am looking for the city having life expectancy 3 seconds and the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s ) ) [ 1 ] => notify
S6000000050	i 'm looking to search for an city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000051	i 'm looking for the city having life expectancy 3 seconds and the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s ) ) [ 1 ] => notify
S6000000052	i want to search for any city called QUOTED_STRING_0 , that have later date of official opening than now	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000053	i want to search for any city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000054	i want to search for an city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000055	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000056	i want some city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000057	i 'd like a city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000058	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000059	what city are pactols thesaurus id QUOTED_STRING_0 and connects with QUOTED_STRING_0 ?	now => ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 and param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S6000000060	i 'd like any city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000061	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000062	which territory claimed by does city with the shortest elevation above sea level have	now => [ param:territory_claimed_by:Entity(org.wikidata:human) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000063	which visitors per year do city with the shortest elevation above sea level have	now => [ param:visitors_per_year:Number ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000064	what territory overlaps does city have ?	now => [ param:territory_overlaps:Entity(org.wikidata:territory_overlaps) ] of ( @org.wikidata.city ) => notify
S6000000065	i am looking for a list of all city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000066	get the city with nearer elevation above sea level than 3 cm and the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:cm ) ) [ 1 ] => notify
S6000000067	get the city with nearer elevation above sea level than 3 cm and the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:cm ) ) [ 1 ] => notify
S6000000068	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000069	i am looking to find some city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000070	are there any city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000071	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000072	are there city having start time 3 milliseconds ago	now => ( @org.wikidata.city ) filter param:start_time:Date == now - 3 unit:ms => notify
S6000000073	what is the feast day of city	now => [ param:feast_day:Entity(org.wikidata:feast_day) ] of ( @org.wikidata.city ) => notify
S6000000074	i want some city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000075	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000076	are there any city called QUOTED_STRING_0 , that have later date of official opening than now ?	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000077	please list city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000078	what motto do the city have ?	now => [ param:motto:Entity(org.wikidata:motto) ] of ( @org.wikidata.city ) => notify
S6000000079	search for a list of city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000080	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000081	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000082	i 'd like any city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000083	please list city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000084	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000085	i am looking for a list of all city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000086	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000087	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000088	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000089	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000090	i would like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000091	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000092	i would like a city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000093	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000094	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000095	what are the official languages of the city with the shortest elevation above sea level ?	now => [ param:official_language:Array(Entity(tt:iso_lang_code)) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000096	tell me what 's the elevation above sea level of the city with the shortest elevation above sea level	now => [ param:elevation_above_sea_level:Measure(m) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000097	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000098	which heritage designation do city have	now => [ param:heritage_designation:Entity(org.wikidata:heritage_designation) ] of ( @org.wikidata.city ) => notify
S6000000099	i would like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000100	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000101	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000102	what is the city that have service retirement 3 milliseconds ago	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 3 unit:ms => notify
S6000000103	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000104	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000105	i 'd like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000106	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000107	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000108	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000109	what are the official languages of the city with the shortest elevation above sea level ?	now => [ param:official_language:Array(Entity(tt:iso_lang_code)) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000110	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000111	please find every city which have life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S4000000000	i am looking for the cities which has the highest population .	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000001	enumerate cities .	now => @org.wikidata.city => notify
S4000000002	i 'm looking for the cities which has the highest population	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000003	i am looking for the cities which has the highest population .	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000004	get an cities	now => @org.wikidata.city => notify
S4000000005	i 'm looking for the cities which has the highest population .	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000006	please search for all cities	now => @org.wikidata.city => notify
S4000000007	enumerate cities .	now => @org.wikidata.city => notify
S4000000008	get an cities .	now => @org.wikidata.city => notify
S4000000009	enumerate cities	now => @org.wikidata.city => notify
S4000000010	i am looking for the cities which has the highest population	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000011	enumerate cities	now => @org.wikidata.city => notify
S4000000012	i am looking for the cities which has the highest population	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000013	enumerate cities	now => @org.wikidata.city => notify
S4000000014	please get all cities	now => @org.wikidata.city => notify
S4000000015	i 'm looking for the cities which has the highest population .	now => ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] => notify
S5000000016	i would like the cities that arch inform location id QUOTED_STRING_0 and have the most recent time of earliest written record .	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000017	i would like the cities that arch inform location id QUOTED_STRING_0 and have the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000018	i 'm looking for the cities having earlier time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000019	i need every cities that arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000020	i need to search an cities that are QUOTED_STRING_0 subclass .	now => ( @org.wikidata.city ) filter param:subclass_of:String =~ QUOTED_STRING_0 => notify
S5000000021	what 's cities that have diameter 2 cm	now => ( @org.wikidata.city ) filter param:diameter:Measure(m) == 2 unit:cm => notify
S5000000022	i 'm looking for the cities having earlier time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000023	are there cities that is part of QUOTED_STRING_0 , and have start time tue	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:start_time:Date == new Date ( enum:tuesday ) => notify
S5000000024	i 'm looking for the cities having earlier time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000025	get the cities having date of official opening DATE_0 and the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 ) ) [ 1 ] => notify
S5000000026	i 'd like the cities that arch inform location id QUOTED_STRING_0 and have the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000027	i want all the cities pleiades id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S5000000028	search for any cities that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000029	i 'm looking for the cities having earlier time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000030	i want to find an cities that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000031	get the cities having date of official opening DATE_0 and the most recent time of earliest written record .	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 ) ) [ 1 ] => notify
S5000000032	i 'm looking for the cities having earlier time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000033	get any cities that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000034	i need every cities that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000035	i am looking for the cities having earlier time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000036	enumerate cities pleiades id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S5000000037	i want to find an cities that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000038	what is the cities with the most occupations	now => ( sort param:count:Number desc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( @org.wikidata.city ) ) ) [ 1 ] => notify
S5000000039	i want some cities having emergency phone number QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:emergency_phone_number:String =~ QUOTED_STRING_0 => notify
S5000000040	i need to search an cities that are QUOTED_STRING_0 subclass	now => ( @org.wikidata.city ) filter param:subclass_of:String =~ QUOTED_STRING_0 => notify
S5000000041	i want to find an cities that arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000042	i need to search an cities that are QUOTED_STRING_0 subclass	now => ( @org.wikidata.city ) filter param:subclass_of:String =~ QUOTED_STRING_0 => notify
S5000000043	search for any cities that arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000044	i would like the cities that arch inform location id QUOTED_STRING_0 and have the most recent time of earliest written record .	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000045	enumerate cities pleiades id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S5000000046	i am looking for the cities having earlier time of earliest written record than DATE_0	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 => notify
S5000000047	search for any cities that arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S6000000048	search for the cities having start time tue and the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S6000000049	i need an cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000050	which country do the cities have	now => [ param:country:Entity(org.wikidata:country) ] of ( @org.wikidata.city ) => notify
S6000000051	what 's the cities pleiades id QUOTED_STRING_0 maintained by wiki project QUOTED_STRING_0 ?	now => ( @org.wikidata.city ) filter param:maintained_by_wikiproject:String =~ QUOTED_STRING_0 and param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S6000000052	show me what 's the history of topic of cities .	now => [ param:history_of_topic:Entity(org.wikidata:history_of_topic) ] of ( @org.wikidata.city ) => notify
S6000000053	i need an cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000054	which cities get diameter 2 cm and are part of QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:diameter:Measure(m) == 2 unit:cm and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000055	get a citie which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000056	i 'd like the official app of cities	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( @org.wikidata.city ) => notify
S6000000057	search for the cities having start time tue and the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S6000000058	i want to search for the list of all cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C => notify
S6000000059	retrieve the list of all cities which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000060	get every cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000061	retrieve the list of all cities which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000062	enumerate cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft .	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000063	get a citie which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000064	i need all cities pleiades id QUOTED_STRING_0 maintained by wiki project QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:maintained_by_wikiproject:String =~ QUOTED_STRING_0 and param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S6000000065	i 'd like to search for a citie with life expectancy longer than 2 ms .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms => notify
S6000000066	get any cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C => notify
S6000000067	which open data portal does the cities which has the highest population have ?	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( sort param:population:Number desc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000068	i 'd like the official app of cities .	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( @org.wikidata.city ) => notify
S6000000069	enumerate cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000070	find all cities that arch inform location id QUOTED_STRING_0 and have emergency phone number QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:emergency_phone_number:String =~ QUOTED_STRING_0 => notify
S6000000071	find all cities that arch inform location id QUOTED_STRING_0 and have emergency phone number QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:emergency_phone_number:String =~ QUOTED_STRING_0 => notify
S6000000072	please search for the cities with start time tue .	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000073	search for any cities with start time tue .	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000074	get every cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000075	get a citie which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000076	get a citie which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000077	search the culture of cities	now => [ param:culture:Entity(org.wikidata:culture) ] of ( @org.wikidata.city ) => notify
S6000000078	i would like the official app of cities	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( @org.wikidata.city ) => notify
S6000000079	i am looking for the cities with life expectancy longer than 2 ms and the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] => notify
S6000000080	enumerate cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000081	which country do the cities have ?	now => [ param:country:Entity(org.wikidata:country) ] of ( @org.wikidata.city ) => notify
S6000000082	get every cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000083	get every cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000084	i want to search for the list of all cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade .	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C => notify
S6000000085	search for a list of cities with start time tue .	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000086	get any cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C => notify
S6000000087	i need an cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000088	retrieve the list of all cities which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000089	retrieve the list of all cities which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000090	i want to search for the list of all cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C => notify
S6000000091	search for a list of cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000092	get every cities with start time tue	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) => notify
S6000000093	retrieve the list of all cities which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000094	i need a list of all cities pleiades id QUOTED_STRING_0 maintained by wiki project QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:maintained_by_wikiproject:String =~ QUOTED_STRING_0 and param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S6000000095	search the culture of cities .	now => [ param:culture:Entity(org.wikidata:culture) ] of ( @org.wikidata.city ) => notify
S6000000096	find all cities that arch inform location id QUOTED_STRING_0 and have emergency phone number QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:emergency_phone_number:String =~ QUOTED_STRING_0 => notify
S6000000097	i 'm looking for the cities with life expectancy longer than 2 ms and the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] => notify
S6000000098	retrieve the list of all cities which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000099	please search for a citie that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000100	which material used does cities have ?	now => [ param:material_used:Entity(org.wikidata:material_used) ] of ( @org.wikidata.city ) => notify
S6000000101	are there any cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000102	i need an cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft	now => ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000103	i 'd like the official app of cities	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( @org.wikidata.city ) => notify
S6000000104	get a citie which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000105	i would like the official app of cities	now => [ param:official_app:Entity(org.wikidata:official_app) ] of ( @org.wikidata.city ) => notify
S6000000106	retrieve the list of all cities which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000107	retrieve the list of all cities which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000108	get a citie which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S6000000109	i need a list of all cities pleiades id QUOTED_STRING_0 maintained by wiki project QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:maintained_by_wikiproject:String =~ QUOTED_STRING_0 and param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S6000000110	which cities get start time tue and has the most recent time of earliest written record ?	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S6000000111	i need a list of all cities pleiades id QUOTED_STRING_0 maintained by wiki project QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:maintained_by_wikiproject:String =~ QUOTED_STRING_0 and param:pleiades_id:String =~ QUOTED_STRING_0 => notify
S7000000112	search for the cities that have start time tue and with sooner time of earliest written record than 2 days ago and the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date <= now - 2 unit:day ) ) [ 1 ] => notify
S7000000113	i want the cities that have dissolved, abolished or demolished date 2 days before now and have the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day ) ) [ 1 ] => notify
S7000000114	get the cities which have start time tue and have population greater than 2 and the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:population:Number >= 2 and param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S7000000115	which is the cities with start time tue with the smallest number of occupations ?	now => ( sort param:count:Number asc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) ) ) [ 1 ] => notify
S7000000116	show me what is the topic's main category of cities having earlier time of earliest written record than DATE_0	now => [ param:topics_main_category:Entity(org.wikidata:topics_main_category) ] of ( ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 ) => notify
S7000000117	retrieve a list of cities having earlier time of earliest written record than DATE_0 and dissolved, abolished or demolished date 2 days before now .	now => ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day and param:time_of_earliest_written_record:Date <= DATE_0 => notify
S7000000118	what are the position held of cities that are QUOTED_STRING_0 subclass ?	now => [ param:position_held:Array(String) ] of ( ( @org.wikidata.city ) filter param:subclass_of:String =~ QUOTED_STRING_0 ) => notify
S7000000119	please search for a list of all cities which have time of earliest written record later than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000120	get the cities which have start time tue and have population greater than 2 and the most recent time of earliest written record .	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:population:Number >= 2 and param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S7000000121	please list cities which have later time of earliest written record than 2 days ago	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000122	i want to retrieve the list of cities with sooner time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S7000000123	i would like any cities which have date of official opening 2 ms before now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == now - 2 unit:ms => notify
S7000000124	search for the cities that have start time tue and with sooner time of earliest written record than 2 days ago and the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date <= now - 2 unit:day ) ) [ 1 ] => notify
S7000000125	get any cities that have diameter 2 cm and have time of earliest written record 2 ms ago .	now => ( @org.wikidata.city ) filter param:diameter:Measure(m) == 2 unit:cm and param:time_of_earliest_written_record:Date == now - 2 unit:ms => notify
S7000000126	what 's the heritage designation of the cities with the most occupations	now => [ param:heritage_designation:Entity(org.wikidata:heritage_designation) ] of ( ( sort param:count:Number desc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( @org.wikidata.city ) ) ) [ 1 ] ) => notify
S7000000127	i need to find an cities having longer life expectancy than 2 days which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:day and param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S7000000128	please enumerate cities having later time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000129	what cities get later time of earliest written record than 2 days before now , and is compulsory education (minimum age) 2	now => ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000130	search for the cities that have start time tue and with sooner time of earliest written record than 2 days ago and the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date <= now - 2 unit:day ) ) [ 1 ] => notify
S7000000131	i need the cities which have date of official opening 2 ms before now and have the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:date_of_official_opening:Date == now - 2 unit:ms ) ) [ 1 ] => notify
S7000000132	show me what is the topic's main category of cities having earlier time of earliest written record than DATE_0 .	now => [ param:topics_main_category:Entity(org.wikidata:topics_main_category) ] of ( ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= DATE_0 ) => notify
S7000000133	which is the cities with life expectancy longer than 2 ms that arch inform location id QUOTED_STRING_0 and have the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] => notify
S7000000134	what 's the category for people born here of cities that arch inform location id QUOTED_STRING_0 ?	now => [ param:category_for_people_born_here:Entity(org.wikidata:category_for_people_born_here) ] of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) => notify
S7000000135	i am looking for the cities which have inception 2 ms before now and have the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:inception:Date == now - 2 unit:ms ) ) [ 1 ] => notify
S7000000136	i want the cities that have dissolved, abolished or demolished date 2 days before now and have the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day ) ) [ 1 ] => notify
S7000000137	i 'd like any cities having longer life expectancy than 2 days which have minimum temperature record 2 f	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:day and param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S7000000138	get the cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft with the smallest number of occupations .	now => ( sort param:count:Number asc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S7000000139	get the cities which have start time tue and have population greater than 2 and the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:population:Number >= 2 and param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] => notify
S7000000140	i would like any cities having longer life expectancy than 2 days which have minimum temperature record 2 f .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:day and param:minimum_temperature_record:Measure(C) == 2 unit:F => notify
S7000000141	what 's the history of topic of the cities that have date of official opening DATE_0 and have the highest population ?	now => [ param:history_of_topic:Entity(org.wikidata:history_of_topic) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 ) ) [ 1 ] ) => notify
S7000000142	i want to retrieve the list of cities with sooner time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S7000000143	i need to find every cities having later time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000144	enumerate cities which have life expectancy longer than 2 ms , and have time of earliest written record later than 2 days ago .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000145	i want to retrieve the list of cities with sooner time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S7000000146	i 'd like an cities that have service retirement 2 ms before now	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 2 unit:ms => notify
S7000000147	which is cities with time of earliest written record later than 2 days ago and start time tue ?	now => ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000148	search for the cities having date of official opening 2 ms before now and the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:date_of_official_opening:Date == now - 2 unit:ms ) ) [ 1 ] => notify
S7000000149	which are the cities that have time of earliest written record 2 ms ago and have date of official opening DATE_0	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 and param:time_of_earliest_written_record:Date == now - 2 unit:ms => notify
S7000000150	please get a list of all cities which have time of earliest written record later than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000151	please list cities which have later time of earliest written record than 2 days ago	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000152	i am looking for the cities which have inception 2 ms before now and have the most recent time of earliest written record	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:inception:Date == now - 2 unit:ms ) ) [ 1 ] => notify
S7000000153	what are the position held of cities having emergency phone number QUOTED_STRING_0 ?	now => [ param:position_held:Array(String) ] of ( ( @org.wikidata.city ) filter param:emergency_phone_number:String =~ QUOTED_STRING_0 ) => notify
S7000000154	tell me what is the partially coincident with of cities that arch inform location id QUOTED_STRING_0 .	now => [ param:partially_coincident_with:Entity(org.wikidata:partially_coincident_with) ] of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) => notify
S7000000155	what is the population of cities that arch inform location id QUOTED_STRING_0	now => [ param:population:Number ] of ( ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 ) => notify
S7000000156	i 'm looking for an cities having later time of earliest written record than 2 days ago .	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000157	i 'd like to retrieve the list of cities which have time of earliest written record later than 2 days before now	now => ( @org.wikidata.city ) filter param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S7000000158	get the cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft with the smallest number of occupations .	now => ( sort param:count:Number asc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S7000000159	retrieve a list of all cities with minimum temperature record 2 f and later time of earliest written record than 2 ms before now	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F and param:time_of_earliest_written_record:Date >= now - 2 unit:ms => notify
S7000000160	search for the cities that have start time tue and with sooner time of earliest written record than 2 days ago and the highest population	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date <= now - 2 unit:day ) ) [ 1 ] => notify
S7000000161	are there cities with minimum temperature record 2 f and later time of earliest written record than 2 ms before now	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F and param:time_of_earliest_written_record:Date >= now - 2 unit:ms => notify
S7000000162	what is the settlement of the cities with the most occupations ?	now => [ param:contains_settlement:Entity(org.wikidata:contains_settlement) ] of ( ( sort param:count:Number desc of ( compute count ( param:occupation:Array(Entity(org.wikidata:occupation)) ) of ( @org.wikidata.city ) ) ) [ 1 ] ) => notify
S7000000163	i 'd like any cities which have date of official opening 2 ms before now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == now - 2 unit:ms => notify
S8000000164	which is cities with inception 2 days ago and date of official opening DATE_0	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 and param:inception:Date == now - 2 unit:day => notify
S8000000165	show me what is the official symbol of the cities with life expectancy longer than 2 ms and the highest population .	now => [ param:official_symbol:Entity(org.wikidata:official_symbol) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] ) => notify
S8000000166	i 'd like every cities with sooner time of earliest written record than 2 days ago , which are part of QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S8000000167	get a list of all cities with later time of earliest written record than 2 days before now , that have service retirement 2 ms before now .	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 2 unit:ms and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000168	retrieve the cities having later time of earliest written record than 2 ms ago and start time tue and the highest population .	now => ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) and param:time_of_earliest_written_record:Date >= now - 2 unit:ms ) ) [ 1 ] => notify
S8000000169	tell me what 's the category for people born here of the cities with start time tue and the most recent time of earliest written record .	now => [ param:category_for_people_born_here:Entity(org.wikidata:category_for_people_born_here) ] of ( ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) ) [ 1 ] ) => notify
S8000000170	show me the open data portal of cities with life expectancy longer than 2 ms .	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) => notify
S8000000171	please list cities with inception 2 days ago and date of official opening DATE_0	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 and param:inception:Date == now - 2 unit:day => notify
S8000000172	find the cities that have service retirement 2 ms before now , with longer life expectancy than 2 days and the most recent time of earliest written record .	now => ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:day and param:service_retirement:Date == now - 2 unit:ms ) ) [ 1 ] => notify
S8000000173	enumerate cities which have date of official opening 2 ms before now and have earlier time of earliest written record than DATE_0 .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == now - 2 unit:ms and param:time_of_earliest_written_record:Date <= DATE_0 => notify
S8000000174	show me what 's the official symbol of the cities with life expectancy longer than 2 ms and the highest population .	now => [ param:official_symbol:Entity(org.wikidata:official_symbol) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] ) => notify
S8000000175	list cities with sooner time of earliest written record than 2 days ago , which are part of QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S8000000176	which permanent duplicated item do cities that is part of QUOTED_STRING_0 , and having area larger than 2 square ft have ?	now => [ param:permanent_duplicated_item:Entity(org.wikidata:permanent_duplicated_item) ] of ( ( @org.wikidata.city ) filter param:area:Measure(m2) >= 2 unit:ft2 and param:part_of:Array(String) contains~ QUOTED_STRING_0 ) => notify
S8000000177	search for an cities which have minimum temperature record 2 f , and is QUOTED_STRING_0 subclass and have later time of earliest written record than 2 ms before now	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F and param:subclass_of:String =~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date >= now - 2 unit:ms => notify
S8000000178	show me the open data portal of cities with life expectancy longer than 2 ms	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) => notify
S8000000179	please list cities with inception 2 days ago and date of official opening DATE_0	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 and param:inception:Date == now - 2 unit:day => notify
S8000000180	show me what 's the official symbol of the cities with life expectancy longer than 2 ms and the highest population .	now => [ param:official_symbol:Entity(org.wikidata:official_symbol) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] ) => notify
S8000000181	which are the cities having dissolved, abolished or demolished date 2 days before now , which have later time of earliest written record than 2 ms before now ?	now => ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day and param:time_of_earliest_written_record:Date >= now - 2 unit:ms => notify
S8000000182	please search for every cities having service retirement 2 ms before now , that arch inform location id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:service_retirement:Date == now - 2 unit:ms => notify
S8000000183	please enumerate cities with inception 2 days ago , which have time of earliest written record later than 2 days ago .	now => ( @org.wikidata.city ) filter param:inception:Date == now - 2 unit:day and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000184	list cities with sooner time of earliest written record than 2 days ago , which are part of QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S8000000185	i am looking to search a citie with later time of earliest written record than 2 days before now that is part of QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000186	show me the open data portal of cities with life expectancy longer than 2 ms .	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) => notify
S8000000187	what 's the foundational text of cities with start time tue	now => [ param:foundational_text:Entity(org.wikidata:foundational_text) ] of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) => notify
S8000000188	are there cities with service retirement 2 ms before now and time of earliest written record later than 2 days before now ?	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 2 unit:ms and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000189	which mountain range does cities that have start time tue have ?	now => [ param:mountain_range:Entity(org.wikidata:mountain_range) ] of ( ( @org.wikidata.city ) filter param:start_time:Date == new Date ( enum:tuesday ) ) => notify
S8000000190	get the list of cities that have hotter maximum temperature record than 2 centigrade and have dissolved, abolished or demolished date 2 days before now and time of earliest written record later than 2 days before now .	now => ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day and param:maximum_temperature_record:Measure(C) >= 2 unit:C and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000191	what topic's main category do the cities compulsory education (minimum age) 2 , that have hotter maximum temperature record than 2 centigrade have ?	now => [ param:topics_main_category:Entity(org.wikidata:topics_main_category) ] of ( ( @org.wikidata.city ) filter param:compulsory_education_minimum_age_:Number == 2 and param:maximum_temperature_record:Measure(C) >= 2 unit:C ) => notify
S8000000192	get a list of all cities with later time of earliest written record than 2 days before now , that have service retirement 2 ms before now .	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 2 unit:ms and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000193	how many cities with life expectancy longer than 2 ms that have service retirement 2 ms before now are there ?	now => aggregate count of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms and param:service_retirement:Date == now - 2 unit:ms ) => notify
S8000000194	show me the open data portal of cities with life expectancy longer than 2 ms .	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) => notify
S8000000195	get the list of cities that have hotter maximum temperature record than 2 centigrade and have dissolved, abolished or demolished date 2 days before now and time of earliest written record later than 2 days before now .	now => ( @org.wikidata.city ) filter param:dissolved_abolished_or_demolished_date:Date == now - 2 unit:day and param:maximum_temperature_record:Measure(C) >= 2 unit:C and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000196	i 'm looking to search a citie with later time of earliest written record than 2 days before now that is part of QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000197	show me what 's the official symbol of the cities with life expectancy longer than 2 ms and the highest population .	now => [ param:official_symbol:Entity(org.wikidata:official_symbol) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] ) => notify
S8000000198	search for an cities which have minimum temperature record 2 f , and is QUOTED_STRING_0 subclass and have later time of earliest written record than 2 ms before now	now => ( @org.wikidata.city ) filter param:minimum_temperature_record:Measure(C) == 2 unit:F and param:subclass_of:String =~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date >= now - 2 unit:ms => notify
S8000000199	what are the ethnic groups of the cities having population greater than 2 and life expectancy longer than 2 ms and the most recent time of earliest written record	now => [ param:ethnic_group:Array(Entity(org.wikidata:ethnic_group)) ] of ( ( sort param:time_of_earliest_written_record:Date desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms and param:population:Number >= 2 ) ) [ 1 ] ) => notify
S8000000200	i am looking to retrieve any cities with inception 2 days ago and date of official opening DATE_0	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date == DATE_0 and param:inception:Date == now - 2 unit:day => notify
S8000000201	show me the open data portal of cities with life expectancy longer than 2 ms .	now => [ param:open_data_portal:Entity(org.wikidata:open_data_portal) ] of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) => notify
S8000000202	get a list of all cities with later time of earliest written record than 2 days before now , that have service retirement 2 ms before now	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 2 unit:ms and param:time_of_earliest_written_record:Date >= now - 2 unit:day => notify
S8000000203	list cities with sooner time of earliest written record than 2 days ago , which are part of QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= now - 2 unit:day => notify
S8000000204	show me what is the official symbol of the cities with life expectancy longer than 2 ms and the highest population .	now => [ param:official_symbol:Entity(org.wikidata:official_symbol) ] of ( ( sort param:population:Number desc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) >= 2 unit:ms ) ) [ 1 ] ) => notify
