S4000000000	i 'd like the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000001	i 'm looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000002	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000003	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000004	i 'm looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000005	i would like to get a list of city	now => @org.wikidata.city => notify
S4000000006	i need to retrieve a list of all city	now => @org.wikidata.city => notify
S4000000007	enumerate city .	now => @org.wikidata.city => notify
S4000000008	i would like to get a list of city	now => @org.wikidata.city => notify
S4000000009	i am looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000010	enumerate city .	now => @org.wikidata.city => notify
S4000000011	i 'm looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000012	i 'm looking for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000013	search for the city with the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S4000000014	list city .	now => @org.wikidata.city => notify
S4000000015	i am looking for the city with the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] => notify
S5000000016	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000017	i need the city which connects with QUOTED_STRING_0 and have the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000018	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000019	search for the city having official number of town quarter containing QUOTED_STRING_0 and the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000020	i 'd like to search the city having over 3 visitors per year	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000021	search for every city with licence plate code QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000022	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000023	i need to get all city with git hub username QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000024	i need to get all city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000025	which city connects with QUOTED_STRING_0 , and have area smaller than 3 square kilometers	now => ( @org.wikidata.city ) filter param:area:Measure(m2) <= 3 unit:km2 and param:connects_with:String =~ QUOTED_STRING_0 => notify
S5000000026	i 'd like to search the city having over 3 visitors per year .	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000027	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000028	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000029	i want some city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000030	i want some city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000031	search for the city with git hub username QUOTED_STRING_0 and the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000032	i need to get all city with git hub username QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000033	count the city .	now => aggregate count of ( @org.wikidata.city ) => notify
S5000000034	what 's city with licence plate code QUOTED_STRING_0 that have life expectancy 3 seconds ?	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 and param:life_expectancy:Measure(ms) == 3 unit:s => notify
S5000000035	i 'd like to search the city having over 3 visitors per year	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000036	get the city pactols thesaurus id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000037	get the city pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000038	are there city which have closer elevation above sea level than 3 km	now => ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:km => notify
S5000000039	find a list of all city that have official number of town quarter containing QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 => notify
S5000000040	i want to search the city which arch inform location id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 => notify
S5000000041	search for every city with licence plate code QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000042	i want some city with git hub username QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:github_username:String =~ QUOTED_STRING_0 => notify
S5000000043	search for every city with licence plate code QUOTED_STRING_0	now => ( @org.wikidata.city ) filter param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S5000000044	i 'd like to search the city having over 3 visitors per year .	now => ( @org.wikidata.city ) filter param:visitors_per_year:Number >= 3 => notify
S5000000045	i need the city that have official number of town quarter containing QUOTED_STRING_0 and have the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:official_number_of_town_quarter:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000046	how many position held in the city with the shortest elevation above sea level	now => [ param:count:Number ] of ( compute count ( param:position_held:Array(String) ) of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) ) => notify
S5000000047	get the city pactols thesaurus id QUOTED_STRING_0 .	now => ( @org.wikidata.city ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S6000000048	get some city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000049	i am looking for the city having life expectancy 3 seconds and the shortest elevation above sea level .	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s ) ) [ 1 ] => notify
S6000000050	i 'm looking to search for an city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000051	i 'm looking for the city having life expectancy 3 seconds and the shortest elevation above sea level	now => ( sort param:elevation_above_sea_level:Measure(m) asc of ( ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s ) ) [ 1 ] => notify
S6000000052	i want to search for any city called QUOTED_STRING_0 , that have later date of official opening than now	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000053	i want to search for any city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000054	i want to search for an city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000055	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000056	i want some city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000057	i 'd like a city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000058	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000059	what city are pactols thesaurus id QUOTED_STRING_0 and connects with QUOTED_STRING_0 ?	now => ( @org.wikidata.city ) filter param:connects_with:String =~ QUOTED_STRING_0 and param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S6000000060	i 'd like any city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000061	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000062	which territory claimed by does city with the shortest elevation above sea level have	now => [ param:territory_claimed_by:Entity(org.wikidata:human) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000063	which visitors per year do city with the shortest elevation above sea level have	now => [ param:visitors_per_year:Number ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000064	what territory overlaps does city have ?	now => [ param:territory_overlaps:Entity(org.wikidata:territory_overlaps) ] of ( @org.wikidata.city ) => notify
S6000000065	i am looking for a list of all city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000066	get the city with nearer elevation above sea level than 3 cm and the hottest maximum temperature record	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:cm ) ) [ 1 ] => notify
S6000000067	get the city with nearer elevation above sea level than 3 cm and the hottest maximum temperature record .	now => ( sort param:maximum_temperature_record:Measure(C) desc of ( ( @org.wikidata.city ) filter param:elevation_above_sea_level:Measure(m) <= 3 unit:cm ) ) [ 1 ] => notify
S6000000068	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000069	i am looking to find some city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000070	are there any city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000071	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000072	are there city having start time 3 milliseconds ago	now => ( @org.wikidata.city ) filter param:start_time:Date == now - 3 unit:ms => notify
S6000000073	what is the feast day of city	now => [ param:feast_day:Entity(org.wikidata:feast_day) ] of ( @org.wikidata.city ) => notify
S6000000074	i want some city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000075	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000076	are there any city called QUOTED_STRING_0 , that have later date of official opening than now ?	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000077	please list city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000078	what motto do the city have ?	now => [ param:motto:Entity(org.wikidata:motto) ] of ( @org.wikidata.city ) => notify
S6000000079	search for a list of city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000080	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000081	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000082	i 'd like any city that have start time now	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000083	please list city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000084	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000085	i am looking for a list of all city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000086	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000087	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000088	enumerate city called QUOTED_STRING_0 , that have later date of official opening than now .	now => ( @org.wikidata.city ) filter param:date_of_official_opening:Date >= now and param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 => notify
S6000000089	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000090	i would like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000091	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000092	i would like a city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000093	i need the list of city which arch inform location id QUOTED_STRING_0 , and have area smaller than 3 square kilometers .	now => ( @org.wikidata.city ) filter param:archinform_location_id:String =~ QUOTED_STRING_0 and param:area:Measure(m2) <= 3 unit:km2 => notify
S6000000094	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000095	what are the official languages of the city with the shortest elevation above sea level ?	now => [ param:official_language:Array(Entity(tt:iso_lang_code)) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000096	tell me what 's the elevation above sea level of the city with the shortest elevation above sea level	now => [ param:elevation_above_sea_level:Measure(m) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000097	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000098	which heritage designation do city have	now => [ param:heritage_designation:Entity(org.wikidata:heritage_designation) ] of ( @org.wikidata.city ) => notify
S6000000099	i would like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000100	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000101	retrieve a list of city called QUOTED_STRING_0 located in present-day administrative territorial entity my office .	now => ( @org.wikidata.city ) filter param:id:Entity(org.wikidata:city) =~ QUOTED_STRING_0 and param:located_in_present_day_administrative_territorial_entity:Location == location:work => notify
S6000000102	what is the city that have service retirement 3 milliseconds ago	now => ( @org.wikidata.city ) filter param:service_retirement:Date == now - 3 unit:ms => notify
S6000000103	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000104	search every city having life expectancy 3 seconds .	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000105	i 'd like any city that have start time now .	now => ( @org.wikidata.city ) filter param:start_time:Date == now => notify
S6000000106	i want to find an city with licence plate code QUOTED_STRING_0 and end time saturday .	now => ( @org.wikidata.city ) filter param:end_time:Date == new Date ( enum:saturday ) and param:licence_plate_code:String =~ QUOTED_STRING_0 => notify
S6000000107	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000108	i am looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000109	what are the official languages of the city with the shortest elevation above sea level ?	now => [ param:official_language:Array(Entity(tt:iso_lang_code)) ] of ( ( sort param:elevation_above_sea_level:Measure(m) asc of ( @org.wikidata.city ) ) [ 1 ] ) => notify
S6000000110	i 'm looking for a list of all city having life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
S6000000111	please find every city which have life expectancy 3 seconds	now => ( @org.wikidata.city ) filter param:life_expectancy:Measure(ms) == 3 unit:s => notify
