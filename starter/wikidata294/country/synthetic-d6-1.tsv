S4000000000	get an country	now => @org.wikidata.country => notify
S4000000001	please search for any country .	now => @org.wikidata.country => notify
S4000000002	get an country .	now => @org.wikidata.country => notify
S4000000003	please search for any country	now => @org.wikidata.country => notify
S4000000004	please list country	now => @org.wikidata.country => notify
S4000000005	please list country .	now => @org.wikidata.country => notify
S4000000006	get an country	now => @org.wikidata.country => notify
S4000000007	get an country .	now => @org.wikidata.country => notify
S4000000008	please search for any country .	now => @org.wikidata.country => notify
S4000000009	please list country	now => @org.wikidata.country => notify
S4000000010	get an country .	now => @org.wikidata.country => notify
S4000000011	please list country .	now => @org.wikidata.country => notify
S4000000012	what are country which have age of candidacy 0	now => ( @org.wikidata.country ) filter param:age_of_candidacy:Number == 0 => notify
S4000000013	retrieve a list of all country	now => @org.wikidata.country => notify
S4000000014	list country	now => @org.wikidata.country => notify
S4000000015	please search for any country	now => @org.wikidata.country => notify
S5000000016	i need the list of country with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000017	get a country digital atlas of the roman empire id QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 => notify
S5000000018	search the country having insee countries and foreign territories code including QUOTED_STRING_0 and the minimum minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) asc of ( ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000019	i need the list of country with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000020	i 'm looking for the country with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000021	i am looking for the country with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000022	are there country having insee countries and foreign territories code including QUOTED_STRING_0 which is subclass of QUOTED_STRING_0 ?	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 and param:subclass_of:String =~ QUOTED_STRING_0 => notify
S5000000023	i am looking for the country with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000024	i am looking for the country with the most participant in	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000025	i 'm looking for the list of all country which have insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S5000000026	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000027	please search for the list of country pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000028	i 'm looking for the country with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000029	i 'm looking for the list of all country which have insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S5000000030	i 'm looking for the country with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S5000000031	please search for the list of country pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000032	i need the list of country with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000033	retrieve a country located in the administrative territorial entity LOCATION_0 .	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == LOCATION_0 => notify
S5000000034	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000035	which country is QUOTED_STRING_0 part , and get basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000036	search the country having insee countries and foreign territories code including QUOTED_STRING_0 and the minimum minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) asc of ( ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000037	get all the country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000038	i am looking for the list of all country which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S5000000039	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000040	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000041	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000042	i 'm looking to search for the list of country with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000043	i need the list of country with basic form of government monarchy	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S5000000044	i am looking for the list of all country which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S5000000045	find all country which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S5000000046	what are country pactols thesaurus id QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:pactols_thesaurus_id:String =~ QUOTED_STRING_0 => notify
S5000000047	i 'm looking for the country with the most participant in .	now => ( sort param:count:Number desc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( @org.wikidata.country ) ) ) [ 1 ] => notify
S6000000048	search every country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000049	please enumerate country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000050	find some country digital atlas of the roman empire id QUOTED_STRING_0 driving side left .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000051	i 'd like the list of all country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000052	which patron saint does the country with the minimum minimum temperature record have ?	now => [ param:patron_saint:Entity(org.wikidata:human) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000053	retrieve the list of country that have greater population than 0 and having insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 and param:population:Number >= 0 => notify
S6000000054	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000055	which country get inception now and are QUOTED_STRING_0 part ?	now => ( @org.wikidata.country ) filter param:inception:Date == now and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S6000000056	which head of governments do country with the minimum minimum temperature record have	now => [ param:head_of_government:Array(Entity(org.wikidata:human)) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000057	i need any country digital atlas of the roman empire id QUOTED_STRING_0 driving side left .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000058	what 's the inception of the country with the minimum minimum temperature record ?	now => [ param:inception:Date ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000059	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000060	i am looking for the country digital atlas of the roman empire id QUOTED_STRING_0 with the smallest count of participant in	now => ( sort param:count:Number asc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000061	tell me the category of associated people of the country with the minimum minimum temperature record .	now => [ param:category_of_associated_people:Entity(org.wikidata:category_of_associated_people) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000062	which head of governments do country with the minimum minimum temperature record have	now => [ param:head_of_government:Array(Entity(org.wikidata:human)) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000063	which are the country which have inception now and have speed limit 0 kph	now => ( @org.wikidata.country ) filter param:inception:Date == now and param:speed_limit:Measure(mps) == 0 unit:kmph => notify
S6000000064	what is country with basic form of government monarchy which have inception 0 s before now ?	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy and param:inception:Date == now - 0 unit:s => notify
S6000000065	find some country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000066	i need any country digital atlas of the roman empire id QUOTED_STRING_0 driving side left .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000067	retrieve the list of country that have greater population than 0 and having insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 and param:population:Number >= 0 => notify
S6000000068	which category of people buried here does the country with the minimum minimum temperature record have ?	now => [ param:category_of_people_buried_here:Entity(org.wikidata:category_of_people_buried_here) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000069	i am looking for the main regulatory text of country .	now => [ param:main_regulatory_text:Entity(org.wikidata:main_regulatory_text) ] of ( @org.wikidata.country ) => notify
S6000000070	which ethnic groups does country have ?	now => [ param:ethnic_group:Array(Entity(org.wikidata:ethnic_group)) ] of ( @org.wikidata.country ) => notify
S6000000071	get the list of country driving side left , which have inception now	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:inception:Date == now => notify
S6000000072	i am looking for the country digital atlas of the roman empire id QUOTED_STRING_0 with the smallest count of participant in .	now => ( sort param:count:Number asc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000073	which country get cooler minimum temperature record than 0 f and greater population than 0 ?	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) <= 0 unit:F and param:population:Number >= 0 => notify
S6000000074	i would like the list of all country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000075	search a list of country having insee countries and foreign territories code including QUOTED_STRING_0 which is subclass of QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 and param:subclass_of:String =~ QUOTED_STRING_0 => notify
S6000000076	which is the country that have time of earliest written record 0 s before now	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == now - 0 unit:s => notify
S6000000077	retrieve every country digital atlas of the roman empire id QUOTED_STRING_0 driving side left .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000078	i 'm looking for the country digital atlas of the roman empire id QUOTED_STRING_0 with the smallest count of participant in .	now => ( sort param:count:Number asc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000079	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000080	get the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000081	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000082	search every country digital atlas of the roman empire id QUOTED_STRING_0 driving side left .	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000083	what is the anthem of the country with the minimum minimum temperature record ?	now => [ param:anthem:Entity(org.wikidata:song) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000084	i 'm looking for the main regulatory text of country .	now => [ param:main_regulatory_text:Entity(org.wikidata:main_regulatory_text) ] of ( @org.wikidata.country ) => notify
S6000000085	is there any country that have earlier inception than 0 weeks before now	now => ( @org.wikidata.country ) filter param:inception:Date <= now - 0 unit:week => notify
S6000000086	i 'd like the country with basic form of government monarchy that have age of candidacy 0	now => ( @org.wikidata.country ) filter param:age_of_candidacy:Number == 0 and param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S6000000087	tell me the category of associated people of the country with the minimum minimum temperature record	now => [ param:category_of_associated_people:Entity(org.wikidata:category_of_associated_people) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000088	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000089	get some country which have insee countries and foreign territories code including QUOTED_STRING_0 , and have bigger area than 0 square meters	now => ( @org.wikidata.country ) filter param:area:Measure(m2) >= 0 unit:m2 and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000090	i 'd like the country which have inception now and have the minimum minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) asc of ( ( @org.wikidata.country ) filter param:inception:Date == now ) ) [ 1 ] => notify
S6000000091	please enumerate country with minimum temperature record 0 f	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == 0 unit:F => notify
S6000000092	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000093	find some country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000094	what are the shares border with of the country with the minimum minimum temperature record ?	now => [ param:shares_border_with:Array(Entity(org.wikidata:country)) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000095	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000096	i 'd like the list of all country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000097	search for the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 and have the highest minimum temperature record .	now => ( sort param:minimum_temperature_record:Measure(C) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000098	i am looking for the country digital atlas of the roman empire id QUOTED_STRING_0 with the smallest count of participant in .	now => ( sort param:count:Number asc of ( compute count ( param:participant_in:Array(Entity(org.wikidata:event)) ) of ( ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000099	i need any country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000100	tell me what is the main regulatory text of country .	now => [ param:main_regulatory_text:Entity(org.wikidata:main_regulatory_text) ] of ( @org.wikidata.country ) => notify
S6000000101	what are the nicknames of the country with the minimum minimum temperature record	now => [ param:nickname:Array(String) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000102	get the country driving side left which have insee countries and foreign territories code including QUOTED_STRING_0 .	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 => notify
S6000000103	enumerate country which is subclass of QUOTED_STRING_0 , with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy and param:subclass_of:String =~ QUOTED_STRING_0 => notify
S6000000104	i 'd like the country with basic form of government monarchy that have age of candidacy 0 .	now => ( @org.wikidata.country ) filter param:age_of_candidacy:Number == 0 and param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S6000000105	please enumerate country with minimum temperature record 0 f .	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == 0 unit:F => notify
S6000000106	enumerate country which is subclass of QUOTED_STRING_0 , with basic form of government monarchy .	now => ( @org.wikidata.country ) filter param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy and param:subclass_of:String =~ QUOTED_STRING_0 => notify
S6000000107	i need any country digital atlas of the roman empire id QUOTED_STRING_0 driving side left	now => ( @org.wikidata.country ) filter param:digital_atlas_of_the_roman_empire_id:String =~ QUOTED_STRING_0 and param:driving_side:Enum(Left,Right) == enum:Left => notify
S6000000108	what topic's main wikimedia portal does country with the minimum minimum temperature record have	now => [ param:topics_main_wikimedia_portal:Entity(org.wikidata:topics_main_wikimedia_portal) ] of ( ( sort param:minimum_temperature_record:Measure(C) asc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000109	i 'd like the country with basic form of government monarchy that have age of candidacy 0 .	now => ( @org.wikidata.country ) filter param:age_of_candidacy:Number == 0 and param:basic_form_of_government:Enum(Dictatorship,Monarchy,Republic,ConstitutionalMonarchy,Federation,Theocracy,SemiPresidentialSystem,PresidentialRegime,Oligarchy,ParliamentarySystem,Autocracy,UnitaryState,AbsoluteMonarchy,RepresentativeDemocracy,FederalRepublic,ElectiveMonarchy,AristocraticRepublic,Condominium,HereditaryMonarchy,SovietRepublic,DirectorialSystem,DualMonarchy,AsymmetricFederalism,ParliamentaryMonarchy,ParliamentaryRepublic,CompositeMonarchy,RepublicanRegimeInFrance) == enum:Monarchy => notify
S6000000110	retrieve the list of country that have greater population than 0 and having insee countries and foreign territories code including QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:insee_countries_and_foreign_territories_code:String =~ QUOTED_STRING_0 and param:population:Number >= 0 => notify
S6000000111	i 'm looking for the main regulatory text of country	now => [ param:main_regulatory_text:Entity(org.wikidata:main_regulatory_text) ] of ( @org.wikidata.country ) => notify
