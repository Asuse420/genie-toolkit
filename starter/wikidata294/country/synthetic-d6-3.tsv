S4000000000	search for all countries .	now => @org.wikidata.country => notify
S4000000001	i want a list of countries	now => @org.wikidata.country => notify
S4000000002	get a list of all countries .	now => @org.wikidata.country => notify
S4000000003	get a list of all countries .	now => @org.wikidata.country => notify
S4000000004	i am looking for every countries	now => @org.wikidata.country => notify
S4000000005	i want a list of countries	now => @org.wikidata.country => notify
S4000000006	retrieve the countries .	now => @org.wikidata.country => notify
S4000000007	i 'm looking for every countries	now => @org.wikidata.country => notify
S4000000008	i want a list of countries	now => @org.wikidata.country => notify
S4000000009	i want a list of countries .	now => @org.wikidata.country => notify
S4000000010	i want a list of countries .	now => @org.wikidata.country => notify
S4000000011	retrieve the countries	now => @org.wikidata.country => notify
S4000000012	retrieve the countries	now => @org.wikidata.country => notify
S4000000013	i want a list of countries	now => @org.wikidata.country => notify
S4000000014	is there countries having age of consent NUMBER_0 ?	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S4000000015	i am looking for every countries	now => @org.wikidata.country => notify
S5000000016	get a list of countries that have age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000017	i want some countries located in the administrative territorial entity my home .	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000018	i need to find an countries which is QUOTED_STRING_0 's part	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000019	find all countries that have age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000020	get a list of countries that have age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000021	find some countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000022	i need to find an countries which is QUOTED_STRING_0 's part	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000023	which are countries historical gazetteer ( gov) id QUOTED_STRING_0 driving side left ?	now => ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left and param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 => notify
S5000000024	i want some countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000025	i am looking for the countries driving side left which have the longest life expectancy	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left ) ) [ 1 ] => notify
S5000000026	please list countries that have age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000027	i need to find an countries which is QUOTED_STRING_0 's part .	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000028	i need to find an countries which is QUOTED_STRING_0 's part .	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000029	i 'd like an countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000030	i am looking for the countries driving side left which have the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left ) ) [ 1 ] => notify
S5000000031	i want some countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000032	i need to get an countries named QUOTED_STRING_0	now => ( @org.wikidata.country ) filter param:id:Entity(org.wikidata:country) =~ QUOTED_STRING_0 => notify
S5000000033	i am looking for the countries which is QUOTED_STRING_0 's part and have the longest life expectancy	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000034	i want some countries located in the administrative territorial entity my home .	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000035	i am looking for the countries which is QUOTED_STRING_0 's part and have the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000036	i 'm looking for the countries driving side left which have the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left ) ) [ 1 ] => notify
S5000000037	i need to find an countries which is QUOTED_STRING_0 's part .	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000038	find all countries that have age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000039	i want some countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000040	i want some countries located in the administrative territorial entity my home .	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000041	i 'd like an countries located in the administrative territorial entity my home	now => ( @org.wikidata.country ) filter param:located_in_the_administrative_territorial_entity:Location == location:home => notify
S5000000042	what are countries which is QUOTED_STRING_0 's part , and have age of consent NUMBER_0 ?	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000043	i want a list of countries which is QUOTED_STRING_0 's part	now => ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 => notify
S5000000044	i 'm looking for the countries which is QUOTED_STRING_0 's part and have the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:part_of:Array(String) contains~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S5000000045	please list countries that have age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 => notify
S5000000046	i 'm looking for the countries driving side left which have the longest life expectancy	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:driving_side:Enum(Left,Right) == enum:Left ) ) [ 1 ] => notify
S5000000047	is there any countries named QUOTED_STRING_0 that have earlier time of earliest written record than yesterday	now => ( @org.wikidata.country ) filter param:id:Entity(org.wikidata:country) =~ QUOTED_STRING_0 and param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day => notify
S6000000048	please search some countries with world cat identities id QUOTED_STRING_0 which have earlier time of earliest written record than yesterday .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000049	i need to retrieve the list of countries that have minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000050	i 'm looking for the list of countries that have minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000051	list countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000052	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000053	i would like any countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000054	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000055	i 'd like all countries with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000056	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000057	i want the countries which have time of earliest written record tue	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000058	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000059	i want the countries which have time of earliest written record tue	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000060	is there countries having time of earliest written record NUMBER_0 milliseconds ago ?	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == now - NUMBER_0 unit:ms => notify
S6000000061	please search some countries with world cat identities id QUOTED_STRING_0 which have earlier time of earliest written record than yesterday	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000062	i want the countries which have time of earliest written record tue .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000063	list countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000064	list countries that have minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000065	tell me the language used of countries	now => [ param:language_used:Entity(tt:iso_lang_code) ] of ( @org.wikidata.country ) => notify
S6000000066	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000067	i need all the countries which have time of earliest written record tue .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000068	get all countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000069	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000070	i would like any countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000071	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000072	what is the currency of the countries with the highest annual number of weddings	now => [ param:currency:Entity(org.wikidata:currency) ] of ( ( sort param:annual_number_of_weddings:Number desc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000073	please search some countries with world cat identities id QUOTED_STRING_0 which have earlier time of earliest written record than yesterday	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000074	i would like to get all countries which have world cat identities id QUOTED_STRING_0 and have zero annual number of weddings	now => ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000075	i need to retrieve the list of countries that have minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000076	search for the countries with world cat identities id QUOTED_STRING_0 which have earlier time of earliest written record than yesterday and have the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day and param:worldcat_identities_id:String =~ QUOTED_STRING_0 ) ) [ 1 ] => notify
S6000000077	what 's the legislative body of the countries with the longest life expectancy	now => [ param:legislative_body:Entity(org.wikidata:legislative_body) ] of ( ( sort param:life_expectancy:Measure(ms) desc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000078	i would like to get all countries which have world cat identities id QUOTED_STRING_0 and have zero annual number of weddings	now => ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000079	please search some countries with world cat identities id QUOTED_STRING_0 which have earlier time of earliest written record than yesterday	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date <= start_of unit:day - 1 unit:day and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000080	what is the area of countries	now => [ param:area:Measure(m2) ] of ( @org.wikidata.country ) => notify
S6000000081	find the countries with time of earliest written record earlier than DATE_0 and zero annual number of weddings and the longest life expectancy .	now => ( sort param:life_expectancy:Measure(ms) desc of ( ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:time_of_earliest_written_record:Date <= DATE_0 ) ) [ 1 ] => notify
S6000000082	what are the countries which have world cat identities id QUOTED_STRING_0 and have zero annual number of weddings ?	now => ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000083	get the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000084	list countries that have minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000085	get all countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000086	is there countries with time of earliest written record tue ?	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000087	what countries have inception NUMBER_0 milliseconds ago	now => ( @org.wikidata.country ) filter param:inception:Date == now - NUMBER_0 unit:ms => notify
S6000000088	i want the countries which have time of earliest written record tue	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000089	show me what 's the quality of countries	now => [ param:has_quality:Entity(org.wikidata:has_quality) ] of ( @org.wikidata.country ) => notify
S6000000090	i want the countries which have time of earliest written record tue .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000091	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000092	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000093	i would like to get all countries which have world cat identities id QUOTED_STRING_0 and have zero annual number of weddings .	now => ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000094	i would like any countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000095	get the countries with world cat identities id QUOTED_STRING_0 with the most award received .	now => ( sort param:count:Number desc of ( compute count ( param:award_received:Array(Entity(org.wikidata:award)) ) of ( ( @org.wikidata.country ) filter param:worldcat_identities_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000096	what category for people who died here does the countries with the longest life expectancy have	now => [ param:category_for_people_who_died_here:Entity(org.wikidata:category_for_people_who_died_here) ] of ( ( sort param:life_expectancy:Measure(ms) desc of ( @org.wikidata.country ) ) [ 1 ] ) => notify
S6000000097	i want the countries which have time of earliest written record tue .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000098	i 'm looking for the list of countries that have minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000099	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000100	are there countries having inception NUMBER_0 milliseconds ago ?	now => ( @org.wikidata.country ) filter param:inception:Date == now - NUMBER_0 unit:ms => notify
S6000000101	get the countries with world cat identities id QUOTED_STRING_0 with the most award received	now => ( sort param:count:Number desc of ( compute count ( param:award_received:Array(Entity(org.wikidata:award)) ) of ( ( @org.wikidata.country ) filter param:worldcat_identities_id:String =~ QUOTED_STRING_0 ) ) ) [ 1 ] => notify
S6000000102	i want the countries which have time of earliest written record tue .	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date == new Date ( enum:tuesday ) => notify
S6000000103	i would like to get all countries which have world cat identities id QUOTED_STRING_0 and have zero annual number of weddings	now => ( @org.wikidata.country ) filter param:annual_number_of_weddings:Number == 0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000104	is there any countries having time of earliest written record after NUMBER_0 ms before yesterday	now => ( @org.wikidata.country ) filter param:time_of_earliest_written_record:Date >= ( start_of unit:day - 1 unit:day ) - NUMBER_0 unit:ms => notify
S6000000105	get the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000106	i 'm looking for the list of countries that have minimum temperature record NUMBER_0 c	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000107	i would like any countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000108	get all countries historical gazetteer ( gov) id QUOTED_STRING_0 , with minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:historical_gazetteer_gov_id:String =~ QUOTED_STRING_0 and param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000109	i want to search for any countries that have minimum temperature record NUMBER_0 c .	now => ( @org.wikidata.country ) filter param:minimum_temperature_record:Measure(C) == NUMBER_0 unit:C => notify
S6000000110	search for all the countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
S6000000111	list countries with world cat identities id QUOTED_STRING_0 and age of consent NUMBER_0 .	now => ( @org.wikidata.country ) filter param:age_of_consent:Number == NUMBER_0 and param:worldcat_identities_id:String =~ QUOTED_STRING_0 => notify
